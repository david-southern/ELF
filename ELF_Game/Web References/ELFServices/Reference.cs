//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ELF.ELFServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ELFServicesSoap", Namespace="http://www.e-l-fun.com/")]
    public partial class ELFServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StartRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartRegistrationRev001OperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishRegistrationRev001OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ELFServices() {
            this.Url = global::ELF.Properties.Settings.Default.ELF_ELFServices_ELFServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StartRegistrationCompletedEventHandler StartRegistrationCompleted;
        
        /// <remarks/>
        public event StartRegistrationRev001CompletedEventHandler StartRegistrationRev001Completed;
        
        /// <remarks/>
        public event FinishRegistrationCompletedEventHandler FinishRegistrationCompleted;
        
        /// <remarks/>
        public event FinishRegistrationRev001CompletedEventHandler FinishRegistrationRev001Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.e-l-fun.com/StartRegistration", RequestNamespace="http://www.e-l-fun.com/", ResponseNamespace="http://www.e-l-fun.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StartRegistration(string regEmail, bool allowMarketing, string hardwareID) {
            object[] results = this.Invoke("StartRegistration", new object[] {
                        regEmail,
                        allowMarketing,
                        hardwareID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StartRegistrationAsync(string regEmail, bool allowMarketing, string hardwareID) {
            this.StartRegistrationAsync(regEmail, allowMarketing, hardwareID, null);
        }
        
        /// <remarks/>
        public void StartRegistrationAsync(string regEmail, bool allowMarketing, string hardwareID, object userState) {
            if ((this.StartRegistrationOperationCompleted == null)) {
                this.StartRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRegistrationOperationCompleted);
            }
            this.InvokeAsync("StartRegistration", new object[] {
                        regEmail,
                        allowMarketing,
                        hardwareID}, this.StartRegistrationOperationCompleted, userState);
        }
        
        private void OnStartRegistrationOperationCompleted(object arg) {
            if ((this.StartRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRegistrationCompleted(this, new StartRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.e-l-fun.com/StartRegistrationRev001", RequestNamespace="http://www.e-l-fun.com/", ResponseNamespace="http://www.e-l-fun.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StartRegistrationRev001(string regEmail, bool allowMarketing, string hardwareID, string clientInfo) {
            object[] results = this.Invoke("StartRegistrationRev001", new object[] {
                        regEmail,
                        allowMarketing,
                        hardwareID,
                        clientInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StartRegistrationRev001Async(string regEmail, bool allowMarketing, string hardwareID, string clientInfo) {
            this.StartRegistrationRev001Async(regEmail, allowMarketing, hardwareID, clientInfo, null);
        }
        
        /// <remarks/>
        public void StartRegistrationRev001Async(string regEmail, bool allowMarketing, string hardwareID, string clientInfo, object userState) {
            if ((this.StartRegistrationRev001OperationCompleted == null)) {
                this.StartRegistrationRev001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartRegistrationRev001OperationCompleted);
            }
            this.InvokeAsync("StartRegistrationRev001", new object[] {
                        regEmail,
                        allowMarketing,
                        hardwareID,
                        clientInfo}, this.StartRegistrationRev001OperationCompleted, userState);
        }
        
        private void OnStartRegistrationRev001OperationCompleted(object arg) {
            if ((this.StartRegistrationRev001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartRegistrationRev001Completed(this, new StartRegistrationRev001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.e-l-fun.com/FinishRegistration", RequestNamespace="http://www.e-l-fun.com/", ResponseNamespace="http://www.e-l-fun.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FinishRegistration(string activationCode) {
            object[] results = this.Invoke("FinishRegistration", new object[] {
                        activationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FinishRegistrationAsync(string activationCode) {
            this.FinishRegistrationAsync(activationCode, null);
        }
        
        /// <remarks/>
        public void FinishRegistrationAsync(string activationCode, object userState) {
            if ((this.FinishRegistrationOperationCompleted == null)) {
                this.FinishRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishRegistrationOperationCompleted);
            }
            this.InvokeAsync("FinishRegistration", new object[] {
                        activationCode}, this.FinishRegistrationOperationCompleted, userState);
        }
        
        private void OnFinishRegistrationOperationCompleted(object arg) {
            if ((this.FinishRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishRegistrationCompleted(this, new FinishRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.e-l-fun.com/FinishRegistrationRev001", RequestNamespace="http://www.e-l-fun.com/", ResponseNamespace="http://www.e-l-fun.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FinishRegistrationRev001(string activationCode, string hardwareID, string clientInfo) {
            object[] results = this.Invoke("FinishRegistrationRev001", new object[] {
                        activationCode,
                        hardwareID,
                        clientInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FinishRegistrationRev001Async(string activationCode, string hardwareID, string clientInfo) {
            this.FinishRegistrationRev001Async(activationCode, hardwareID, clientInfo, null);
        }
        
        /// <remarks/>
        public void FinishRegistrationRev001Async(string activationCode, string hardwareID, string clientInfo, object userState) {
            if ((this.FinishRegistrationRev001OperationCompleted == null)) {
                this.FinishRegistrationRev001OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishRegistrationRev001OperationCompleted);
            }
            this.InvokeAsync("FinishRegistrationRev001", new object[] {
                        activationCode,
                        hardwareID,
                        clientInfo}, this.FinishRegistrationRev001OperationCompleted, userState);
        }
        
        private void OnFinishRegistrationRev001OperationCompleted(object arg) {
            if ((this.FinishRegistrationRev001Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishRegistrationRev001Completed(this, new FinishRegistrationRev001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartRegistrationCompletedEventHandler(object sender, StartRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StartRegistrationRev001CompletedEventHandler(object sender, StartRegistrationRev001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartRegistrationRev001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartRegistrationRev001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FinishRegistrationCompletedEventHandler(object sender, FinishRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FinishRegistrationRev001CompletedEventHandler(object sender, FinishRegistrationRev001CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishRegistrationRev001CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishRegistrationRev001CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591